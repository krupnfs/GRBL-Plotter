<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="grblAlarm" xml:space="preserve">
    <value>Alarm</value>
  </data>
  <data name="grblCheck" xml:space="preserve">
    <value>Check</value>
  </data>
  <data name="grblDoor" xml:space="preserve">
    <value>Door</value>
  </data>
  <data name="grblHold" xml:space="preserve">
    <value>Hold</value>
  </data>
  <data name="grblHome" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="grblIdle" xml:space="preserve">
    <value>Idle</value>
  </data>
  <data name="grblJog" xml:space="preserve">
    <value>Jog</value>
  </data>
  <data name="grblProbe" xml:space="preserve">
    <value>Probe</value>
  </data>
  <data name="grblRun" xml:space="preserve">
    <value>Run</value>
  </data>
  <data name="grblSleep" xml:space="preserve">
    <value>Sleep</value>
  </data>
  <data name="grblNotConnected" xml:space="preserve">
    <value>grbl controller is not connected!\r\nCannot perform the desired action!</value>
  </data>
  <data name="mainAttention" xml:space="preserve">
    <value>Attention</value>
  </data>
  <data name="mainHelpLanguage" xml:space="preserve">
    <value>Feel free to improove translation</value>
  </data>
  <data name="mainHotkeyError" xml:space="preserve">
    <value>File 'hotkeys.xml' not found, no hotkeys set!</value>
  </data>
  <data name="mainHotkeyError1" xml:space="preserve">
    <value>Unknown action:</value>
  </data>
  <data name="mainHotkeyError2" xml:space="preserve">
    <value>Error with Hotkey.xml</value>
  </data>
  <data name="mainInfoCheckCode" xml:space="preserve">
    <value>Check G-Code</value>
  </data>
  <data name="mainInfoErrorLine" xml:space="preserve">
    <value>Error before line</value>
  </data>
  <data name="mainInfoFinishCheck" xml:space="preserve">
    <value>Finish checking G-Code</value>
  </data>
  <data name="mainInfoFinishSend" xml:space="preserve">
    <value>Finish sending G-Code</value>
  </data>
  <data name="mainInfoKill" xml:space="preserve">
    <value>Press 'Kill Alarm' to proceed ('$X')</value>
  </data>
  <data name="mainInfoLaserModeOff" xml:space="preserve">
    <value>Laser Mode not active $32=0</value>
  </data>
  <data name="mainInfoLaserModeOn" xml:space="preserve">
    <value>Laser Mode active $32=1</value>
  </data>
  <data name="mainInfoPause" xml:space="preserve">
    <value>Pause streaming - press play (</value>
  </data>
  <data name="mainInfoProbing" xml:space="preserve">
    <value>Probing</value>
  </data>
  <data name="mainInfoResume" xml:space="preserve">
    <value>Press 'Resume' to proceed</value>
  </data>
  <data name="mainInfoSendCode" xml:space="preserve">
    <value>Send G-Code</value>
  </data>
  <data name="mainInfoStopStream" xml:space="preserve">
    <value>STOP streaming (</value>
  </data>
  <data name="mainInfoStopStream2" xml:space="preserve">
    <value>STOP streaming ( Line</value>
  </data>
  <data name="mainInfoToolChange" xml:space="preserve">
    <value>Tool change...</value>
  </data>
  <data name="mainInfoUndo" xml:space="preserve">
    <value>Undo last action</value>
  </data>
  <data name="mainInfoWaitIdle" xml:space="preserve">
    <value>Wait for IDLE, then pause (</value>
  </data>
  <data name="mainLimits1" xml:space="preserve">
    <value>Next move will exceed machine limits!\r</value>
  </data>
  <data name="mainLimits2" xml:space="preserve">
    <value>\r\n Press 'Ok' to move anyway</value>
  </data>
  <data name="mainLimits3" xml:space="preserve">
    <value>Graphics dimension exceeds machine dimension!\r\nTransformation is recommended to avoid damaging the machine!</value>
  </data>
  <data name="mainLoadError" xml:space="preserve">
    <value>Streaming must be stopped before loading new file</value>
  </data>
  <data name="mainLoadError1" xml:space="preserve">
    <value>File not found: '</value>
  </data>
  <data name="mainLoadError2" xml:space="preserve">
    <value>URL extension is not 'svg' or 'dxf'\r\nTry SVG import anyway, but without setting 'Recent File' list.</value>
  </data>
  <data name="mainLoadError3" xml:space="preserve">
    <value>File extension not supported '</value>
  </data>
  <data name="mainParseError" xml:space="preserve">
    <value>Not a valid number</value>
  </data>
  <data name="mainParseError1" xml:space="preserve">
    <value>Not a valid number, set line to 0</value>
  </data>
  <data name="mainPauseStream" xml:space="preserve">
    <value>Pause streaming - press play</value>
  </data>
  <data name="mainPauseStream1" xml:space="preserve">
    <value>The last job was paused at line</value>
  </data>
  <data name="mainPauseStream2" xml:space="preserve">
    <value>Do you want to continue the job?</value>
  </data>
  <data name="mainProblem" xml:space="preserve">
    <value>Problem</value>
  </data>
  <data name="mainProgress" xml:space="preserve">
    <value>Progress</value>
  </data>
  <data name="mainQuit" xml:space="preserve">
    <value>Quit GRBL-Plotter?</value>
  </data>
  <data name="mainSimuSpeed" xml:space="preserve">
    <value>Speed</value>
  </data>
  <data name="mainSimuStart" xml:space="preserve">
    <value>Start path simulation</value>
  </data>
  <data name="mainSimuStop" xml:space="preserve">
    <value>Stop simulation</value>
  </data>
  <data name="mainStreamingActive" xml:space="preserve">
    <value>Streaming is still active - press Stop and try again</value>
  </data>
  <data name="mainToolChange" xml:space="preserve">
    <value>Tool / Pen change!</value>
  </data>
  <data name="mainToolChange1" xml:space="preserve">
    <value>Tool change needed:\r</value>
  </data>
  <data name="mainToolChange2" xml:space="preserve">
    <value>\rpress start to continue.</value>
  </data>
  <data name="mainUnknownCode" xml:space="preserve">
    <value>Fixed some unknown G-Code:\r\n</value>
  </data>
  <data name="probingCancel1" xml:space="preserve">
    <value>Probing canceled</value>
  </data>
  <data name="probingCancel2" xml:space="preserve">
    <value>Process last command</value>
  </data>
  <data name="probingCenter" xml:space="preserve">
    <value>Move to center</value>
  </data>
  <data name="probingFail1" xml:space="preserve">
    <value>Fail: no contact</value>
  </data>
  <data name="probingFail2" xml:space="preserve">
    <value>Cancel probing</value>
  </data>
  <data name="probingFinish" xml:space="preserve">
    <value>Finish</value>
  </data>
  <data name="probingProbingOn" xml:space="preserve">
    <value>Probing on</value>
  </data>
  <data name="probingSetCenter" xml:space="preserve">
    <value>Set center </value>
  </data>
  <data name="probingTimeOut" xml:space="preserve">
    <value>Time out</value>
  </data>
  <data name="serialClose" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="serialCloseError" xml:space="preserve">
    <value>Serial Connection is needed.\r\nClose main window instead</value>
  </data>
  <data name="serialOpen" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="statusStripeCheckCOM" xml:space="preserve">
    <value>Check COM-window for further information</value>
  </data>
  <data name="statusStripeClickKeys" xml:space="preserve">
    <value>Alt-Click to select Figure; Control-Click to select Group; Shift-Click to select Tile;Or click on XML-Tag</value>
  </data>
  <data name="statusStripeClickKeys2" xml:space="preserve">
    <value>Click: mark Figure; Control-Click: mark Group; Shift-Click: mark Tile;Alt-Click: show GCode line</value>
  </data>
  <data name="statusStripeDownKeys" xml:space="preserve">
    <value>Control-Down to move selected Block one down; Control-Shift-Down to move to end</value>
  </data>
  <data name="statusStripeEditModeOn" xml:space="preserve">
    <value>Edit mode on - click into 2D view to finish</value>
  </data>
  <data name="statusStripeFileLoad" xml:space="preserve">
    <value>File loading</value>
  </data>
  <data name="statusStripeFileNotFound" xml:space="preserve">
    <value>File not found - remove from list</value>
  </data>
  <data name="statusStripeGrblResetNeeded" xml:space="preserve">
    <value>Perhaps serial port is locked and a restart of GRBL-Plotter is needed</value>
  </data>
  <data name="statusStripeResetNeeded" xml:space="preserve">
    <value>Probably a reset of the controller is needed</value>
  </data>
  <data name="statusStripeSelectionMoved" xml:space="preserve">
    <value>Selection moved by</value>
  </data>
  <data name="statusStripeStreamingStatusSaved" xml:space="preserve">
    <value>Streaming status and G-Code are saved in '_lastProcessed.nc'. Continuation after program restart is possible.</value>
  </data>
  <data name="statusStripeUpKeys" xml:space="preserve">
    <value>Control-Up to move selected Block one up; Control-Shift-Up to move to top</value>
  </data>
  <data name="statusStripeCheckUpdate" xml:space="preserve">
    <value>'Check for new GRBL-Plotter release on GitHub' - can be disabled in [Setup - Program control] </value>
  </data>
  <data name="cameraMountFix" xml:space="preserve">
    <value>Fix mounted camera</value>
  </data>
  <data name="cameraMountXy" xml:space="preserve">
    <value>Camera mounted on XY platform</value>
  </data>
  <data name="cameraMountXyz" xml:space="preserve">
    <value>Camera mounted on Z axis</value>
  </data>
  <data name="cameraSetRadius" xml:space="preserve">
    <value>Set radius</value>
  </data>
  <data name="cameraScaling" xml:space="preserve">
    <value>scaling</value>
  </data>
  <data name="cameraTeachRadius" xml:space="preserve">
    <value>Teach circle radius of</value>
  </data>
  <data name="cameraForUpperPos" xml:space="preserve">
    <value>for upper camera position</value>
  </data>
  <data name="cameraForLowerPos" xml:space="preserve">
    <value>for lower camera position</value>
  </data>
  <data name="cameraQuit" xml:space="preserve">
    <value>Press 'ESC' to quit teaching.</value>
  </data>
  <data name="cameraSetMount" xml:space="preserve">
    <value>Set camera mounting to</value>
  </data>
  <data name="cameraSetCrossHairs" xml:space="preserve">
    <value>Click to set cross hairs position</value>
  </data>
  <data name="cameraSetDistortion" xml:space="preserve">
    <value>Teach four edges of the distorted rectangle (ratio 4:3). Press ESC to abort.</value>
  </data>
  <data name="cameraNoCamera" xml:space="preserve">
    <value>No camera source found. Close and open this window after connecting a camera.</value>
  </data>
  <data name="cameraNextClick" xml:space="preserve">
    <value>Next click will teach scaling\r\n of camera view to</value>
  </data>
  <data name="cameraDistortionMarker" xml:space="preserve">
    <value>Distortion marker</value>
  </data>
  <data name="probing" xml:space="preserve">
    <value>probing</value>
  </data>
  <data name="scan" xml:space="preserve">
    <value>scan</value>
  </data>
  <data name="heightScan" xml:space="preserve">
    <value>height scan</value>
  </data>
  <data name="useCaseInfo" xml:space="preserve">
    <value>A use-case is a presetted setup to adjust settings for a specific machine and/or application.\r\nThe settings of a selected and applied use-case also remain after the import of the graphics.\r\nA use-case needs to be stored in \data\usecases to be accessible.\r\nAlso exported machine-settings and sub-sets of it can be used.</value>
  </data>
  <data name="useCaseInfo2" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="useCaseHeader1" xml:space="preserve">
    <value>Use current settings (last loaded: '{0}')</value>
  </data>
  <data name="useCaseHeader2" xml:space="preserve">
    <value>Settings from '{0}'</value>
  </data>
  <data name="useCaseItem0" xml:space="preserve">
    <value>### Current settings ###</value>
  </data>
  <data name="codeMessage_1_unknowncommand" xml:space="preserve">
    <value>Given command is unknown or not supported, start an issue on github to clarify.</value>
  </data>
  <data name="codeMessage_2_highdataamount" xml:space="preserve">
    <value>The amount of single, selectable, figures exceeds the given maximum an would decrease the performance. \r\nAll figures are summarized to one figure.\r\nThe limit can be adjusted in\r\n[Setup - Graphics import - Path import - Grouping and tools - Conversion concerning]</value>
  </data>
  <data name="codeMessage_2_zdoubletang" xml:space="preserve">
    <value>The z-axis is assigned twice: as tangential axis AND as Pen-up/down axis. \r\nThis will cause strange and unpredictable behavior.</value>
  </data>
  <data name="codeMessage_3_spindlestaysoff" xml:space="preserve">
    <value>M3|M4 / M5 command will not be sent! -&gt; Spindle stays off. \r\nCheck option in \r\n[Setup - Graphics import - G-Code generation - Z axis Pen up/down translation] \r\n☐ Do not switch on spindle</value>
  </data>
  <data name="codeMessage_3_zdoubleaux" xml:space="preserve">
    <value>The z-axis is assigned twice: as auxillary axis AND as Pen-up/down axis. \r\nThis will cause strange and unpredictable behavior.</value>
  </data>
  <data name="codeMessage_3_zdoubletang" xml:space="preserve">
    <value>The z-axis is assigned twice: as tangential axis AND as Pen-up/down axis. \r\nThis will cause strange and unpredictable behavior.</value>
  </data>
  <data name="codeMessage_attention" xml:space="preserve">
    <value>Attention</value>
  </data>
  <data name="codeMessage_error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="codeMessage_warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="codeMessage_1202_dontplot" xml:space="preserve">
    <value>Layer is not visible or printing of layer is disabled. Check:
https://librecad.readthedocs.io/en/latest/ref/widgets.html#widget-layerlist</value>
  </data>
  <data name="codeMessage_1302_dontplot" xml:space="preserve">
    <value>Layer, path or object is not visible because of visibility attribute.</value>
  </data>
  <data name="codeMessage_1x02_dontplot" xml:space="preserve">
    <value />
  </data>
  <data name="statusStripeButtonBlocked" xml:space="preserve">
    <value>Custom button is blocked while streaming</value>
  </data>
  <data name="statusStripeStreamingPause" xml:space="preserve">
    <value>Streaming PAUSE</value>
  </data>
  <data name="statusStripeStreamingContinue" xml:space="preserve">
    <value>Continue streaming</value>
  </data>
  <data name="statusStripeStreamingCheck" xml:space="preserve">
    <value>Check G-Code on grbl controller</value>
  </data>
  <data name="statusStripeStreamingStop" xml:space="preserve">
    <value>Streaming STOP at line</value>
  </data>
  <data name="statusStripeStreamingStart" xml:space="preserve">
    <value>Streaming START from line</value>
  </data>
  <data name="statusStripeStreamingFinish" xml:space="preserve">
    <value>Streaming FINISHED after</value>
  </data>
  <data name="NewKey" xml:space="preserve">
    <value />
  </data>
  <data name="codeMessage_1102_dontplot" xml:space="preserve">
    <value>Layer, path or object is not visible because of visibility attribute.</value>
  </data>
  <data name="codeMessage_1103_elementsupport" xml:space="preserve">
    <value>An unsupported SVG-XML element was found.
The resulting image may look different than expected.
Possible workaround: try to convert object to path.</value>
  </data>
  <data name="codeMessage_1104_elementuk" xml:space="preserve">
    <value>An unknown SVG-XML element was found.
The resulting image may look different than expected.
Possible workaround: try to convert object to path.</value>
  </data>
  <data name="codeMessage_1105_textpath" xml:space="preserve">
    <value>An 'tspan' element within a 'textPath' element was found. This combination is not supported.
The resulting image may look different than expected.
Possible workaround: try to convert object to path.</value>
  </data>
  <data name="codeMessage_1106_attributesupport" xml:space="preserve">
    <value>An unsupported SVG-XML attribute was found.
The resulting image may look different than expected.
Possible workaround: try to convert object to path.</value>
  </data>
  <data name="importMessageTitle" xml:space="preserve">
    <value>Import information</value>
  </data>
  <data name="importMessageFileName" xml:space="preserve">
    <value>File name:</value>
  </data>
  <data name="importMessageFilePath" xml:space="preserve">
    <value>File path:</value>
  </data>
  <data name="importMessageSVGMetaDataOk" xml:space="preserve">
    <value>SVG Metadata processed</value>
  </data>
  <data name="importMessageSVGMetaDataNok1" xml:space="preserve">
    <value>SVG Metadata available, but not enabled!</value>
  </data>
  <data name="importMessageRelMovement" xml:space="preserve">
    <value>Relative movements are enabled</value>
  </data>
  <data name="importMessageAddGraphic" xml:space="preserve">
    <value>Add imported graphic</value>
  </data>
  <data name="importMessageToolTableNeeded" xml:space="preserve">
    <value>Tool table needed, last loaded:</value>
  </data>
  <data name="importMessageGeneralSettings" xml:space="preserve">
    <value>General settings:</value>
  </data>
  <data name="importMessageXYFeed" xml:space="preserve">
    <value>XY Feed</value>
  </data>
  <data name="importMessageMaxXYFeed" xml:space="preserve">
    <value>grbl X/Y Max. rate:</value>
  </data>
  <data name="importMessageGcodeHeader" xml:space="preserve">
    <value>GCode Header</value>
  </data>
  <data name="importMessageGcodeFooter" xml:space="preserve">
    <value>GCode Footer</value>
  </data>
  <data name="importMessageLaserMode" xml:space="preserve">
    <value>Lasermode: use M3S0 instead of M5 to switch off laser (or spindle)</value>
  </data>
  <data name="importMessageLaserModeNok" xml:space="preserve">
    <value>grbl Laser mode $32 is not enabled</value>
  </data>
  <data name="importMessageLaserPower" xml:space="preserve">
    <value>Laser power</value>
  </data>
  <data name="importMessageSpindleSpeed" xml:space="preserve">
    <value>Spindle Speed</value>
  </data>
  <data name="importMessageSpindleSpeedMax" xml:space="preserve">
    <value>grbl Spindle speed Max.</value>
  </data>
  <data name="importMessagePUD" xml:space="preserve">
    <value>Pen up/down translation:</value>
  </data>
  <data name="importMessagePUDZ" xml:space="preserve">
    <value>Z axis enabled</value>
  </data>
  <data name="importMessagePUDZNoSpindle" xml:space="preserve">
    <value>Spindle will not be switched on</value>
  </data>
  <data name="importMessagePUDZFeed" xml:space="preserve">
    <value>Z Feed</value>
  </data>
  <data name="importMessagePUDZUp" xml:space="preserve">
    <value>Z Up (save)</value>
  </data>
  <data name="importMessagePUDZDown" xml:space="preserve">
    <value>Z Down (engrave)</value>
  </data>
  <data name="importMessagePUDZDepthPass" xml:space="preserve">
    <value>Depth per pass</value>
  </data>
  <data name="importMessagePUDZDepthPassNoZUp" xml:space="preserve">
    <value>No Z up between passes</value>
  </data>
  <data name="importMessagePUDZFeedMax" xml:space="preserve">
    <value>grbl Z Max. Feed rate:</value>
  </data>
  <data name="importMessagePUDPWM" xml:space="preserve">
    <value>PWM enabled (Servo control)</value>
  </data>
  <data name="importMessagePUDPWMUp" xml:space="preserve">
    <value>PWM Up</value>
  </data>
  <data name="importMessagePUDPWMZero" xml:space="preserve">
    <value>PWM Zero</value>
  </data>
  <data name="importMessagePUDPWMDown" xml:space="preserve">
    <value>PWM Down</value>
  </data>
  <data name="importMessagePUDSpindle" xml:space="preserve">
    <value>Spindle on/off with Pen down/up</value>
  </data>
  <data name="importMessagePUDIndividual" xml:space="preserve">
    <value>Individual commands</value>
  </data>
  <data name="importMessagePUDPenUp" xml:space="preserve">
    <value>Pen Up</value>
  </data>
  <data name="importMessagePUDPenDown" xml:space="preserve">
    <value>Pen Down</value>
  </data>
  <data name="importMessageOption1" xml:space="preserve">
    <value>Path interpretation:</value>
  </data>
  <data name="importMessageOptionNodesOnly" xml:space="preserve">
    <value>Nodes only - make dots at given coordinates</value>
  </data>
  <data name="importMessageOptionZFromWidth" xml:space="preserve">
    <value>Get Z value from line width (depth)</value>
  </data>
  <data name="importMessageOptionSFromWidth" xml:space="preserve">
    <value>Get S value from line width (laser power / spindle speed)</value>
  </data>
  <data name="importMessageOptionCircleToDot" xml:space="preserve">
    <value>Convert circle to point</value>
  </data>
  <data name="importMessageOptionCircleRadiusToZ" xml:space="preserve">
    <value>Convert circle-radius to Z value</value>
  </data>
  <data name="importMessageOption2" xml:space="preserve">
    <value>Path modification:</value>
  </data>
  <data name="importMessageOptionFilter" xml:space="preserve">
    <value>Filter graphic elements (remove objects)</value>
  </data>
  <data name="importMessageOptionHatchFill" xml:space="preserve">
    <value>Add Hatch fill</value>
  </data>
  <data name="importMessageOptionClip" xml:space="preserve">
    <value>Crop or tile graphic</value>
  </data>
  <data name="importMessageOptionTangential" xml:space="preserve">
    <value>Tangential axis</value>
  </data>
  <data name="importMessageOptionDragTool" xml:space="preserve">
    <value>Adapt path for Drag tool</value>
  </data>
  <data name="importMessageOptionExtend" xml:space="preserve">
    <value>Extend path (e.g. for laser cutting)</value>
  </data>
  <data name="importMessageOptionOutlineDevelop" xml:space="preserve">
    <value>Outline development</value>
  </data>
  <data name="importMessageOptionWireBender" xml:space="preserve">
    <value>Wire bender</value>
  </data>
  <data name="importMessageOption1Link" xml:space="preserve">
    <value>Possible path interpretations</value>
  </data>
  <data name="importMessageOption2Link" xml:space="preserve">
    <value>Possible path modifications</value>
  </data>
  <data name="importMessageSourceMetadata" xml:space="preserve">
    <value>From Metadata</value>
  </data>
  <data name="importMessageSourceTooltable" xml:space="preserve">
    <value>From tool table</value>
  </data>
  <data name="importMessageSpindleDirection" xml:space="preserve">
    <value>Laser mode / Spindle direction</value>
  </data>
  <data name="importMessageSpindleDirectionM3" xml:space="preserve">
    <value>M3 (CW-clockwise) Constant Laser Power Mode</value>
  </data>
  <data name="importMessageSpindleDirectionM4" xml:space="preserve">
    <value>M4 (CCW-counterclockwise) Dynamic Laser Power Mode</value>
  </data>
  <data name="loadMessageContinue" xml:space="preserve">
    <value>Continue last job?</value>
  </data>
  <data name="loadMessageLastProcessed" xml:space="preserve">
    <value>Loading the last processed G-Code</value>
  </data>
  <data name="loadMessageLoad1" xml:space="preserve">
    <value>Loading G-Code</value>
  </data>
  <data name="loadMessageNoImport" xml:space="preserve">
    <value>No import options applied!</value>
  </data>
  <data name="loadMessageReplaceM34" xml:space="preserve">
    <value>Load G-Code option: Replaces laser mode command M3 by M4</value>
  </data>
  <data name="loadMessageReplaceM43" xml:space="preserve">
    <value>Load G-Code option: Replaces laser mode command M4 by M3</value>
  </data>
  <data name="loadMessageStreaming" xml:space="preserve">
    <value>Streaming is active, can't load new file.</value>
  </data>
  <data name="loadMessageToolChange" xml:space="preserve">
    <value>Automatic tool change is enabled</value>
  </data>
  <data name="mainStartMissingFiles" xml:space="preserve">
    <value>Missing program files,&lt;br&gt;please check the GRBL-Plotter installation</value>
  </data>
  <data name="statusStripeSelectionMoveShift" xml:space="preserve">
    <value>press 'Shift' to snap on grid</value>
  </data>
  <data name="statusStripeSelectionResize" xml:space="preserve">
    <value>Resized by</value>
  </data>
  <data name="statusStripeSelectionResizeCtrl" xml:space="preserve">
    <value>press 'Ctrl' to keep ratio</value>
  </data>
  <data name="statusStripeSelectionRotate" xml:space="preserve">
    <value>Rotated by</value>
  </data>
  <data name="statusStripeSelectionRotateShift" xml:space="preserve">
    <value>press 'Shift' to snap on full degrees</value>
  </data>
</root>