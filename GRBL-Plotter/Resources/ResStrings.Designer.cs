//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GrblPlotter.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class ResStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ResStrings() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("GrblPlotter.Resources.ResStrings", typeof(ResStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Distortion marker.
        /// </summary>
        public static string cameraDistortionMarker {
            get {
                return ResourceManager.GetString("cameraDistortionMarker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на for lower camera position.
        /// </summary>
        public static string cameraForLowerPos {
            get {
                return ResourceManager.GetString("cameraForLowerPos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на for upper camera position.
        /// </summary>
        public static string cameraForUpperPos {
            get {
                return ResourceManager.GetString("cameraForUpperPos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fix mounted camera.
        /// </summary>
        public static string cameraMountFix {
            get {
                return ResourceManager.GetString("cameraMountFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Camera mounted on XY platform.
        /// </summary>
        public static string cameraMountXy {
            get {
                return ResourceManager.GetString("cameraMountXy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Camera mounted on Z axis.
        /// </summary>
        public static string cameraMountXyz {
            get {
                return ResourceManager.GetString("cameraMountXyz", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Next click will teach scaling\r\n of camera view to.
        /// </summary>
        public static string cameraNextClick {
            get {
                return ResourceManager.GetString("cameraNextClick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No camera source found. Close and open this window after connecting a camera..
        /// </summary>
        public static string cameraNoCamera {
            get {
                return ResourceManager.GetString("cameraNoCamera", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Press &apos;ESC&apos; to quit teaching..
        /// </summary>
        public static string cameraQuit {
            get {
                return ResourceManager.GetString("cameraQuit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на scaling.
        /// </summary>
        public static string cameraScaling {
            get {
                return ResourceManager.GetString("cameraScaling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Click to set cross hairs position.
        /// </summary>
        public static string cameraSetCrossHairs {
            get {
                return ResourceManager.GetString("cameraSetCrossHairs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Teach four edges of the distorted rectangle (ratio 4:3). Press ESC to abort..
        /// </summary>
        public static string cameraSetDistortion {
            get {
                return ResourceManager.GetString("cameraSetDistortion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Set camera mounting to.
        /// </summary>
        public static string cameraSetMount {
            get {
                return ResourceManager.GetString("cameraSetMount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Set radius.
        /// </summary>
        public static string cameraSetRadius {
            get {
                return ResourceManager.GetString("cameraSetRadius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Teach circle radius of.
        /// </summary>
        public static string cameraTeachRadius {
            get {
                return ResourceManager.GetString("cameraTeachRadius", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Given command is unknown or not supported, start an issue on github to clarify..
        /// </summary>
        public static string codeMessage_1_unknowncommand {
            get {
                return ResourceManager.GetString("codeMessage_1_unknowncommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Layer, path or object is not visible because of visibility attribute..
        /// </summary>
        public static string codeMessage_1102_dontplot {
            get {
                return ResourceManager.GetString("codeMessage_1102_dontplot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An unsupported SVG-XML element was found.
        ///The resulting image may look different than expected.
        ///Possible workaround: try to convert object to path..
        /// </summary>
        public static string codeMessage_1103_elementsupport {
            get {
                return ResourceManager.GetString("codeMessage_1103_elementsupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An unknown SVG-XML element was found.
        ///The resulting image may look different than expected.
        ///Possible workaround: try to convert object to path..
        /// </summary>
        public static string codeMessage_1104_elementuk {
            get {
                return ResourceManager.GetString("codeMessage_1104_elementuk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An &apos;tspan&apos; element within a &apos;textPath&apos; element was found. This combination is not supported.
        ///The resulting image may look different than expected.
        ///Possible workaround: try to convert object to path..
        /// </summary>
        public static string codeMessage_1105_textpath {
            get {
                return ResourceManager.GetString("codeMessage_1105_textpath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на An unsupported SVG-XML attribute was found.
        ///The resulting image may look different than expected.
        ///Possible workaround: try to convert object to path..
        /// </summary>
        public static string codeMessage_1106_attributesupport {
            get {
                return ResourceManager.GetString("codeMessage_1106_attributesupport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Layer is not visible or printing of layer is disabled. Check:
        ///https://librecad.readthedocs.io/en/latest/ref/widgets.html#widget-layerlist.
        /// </summary>
        public static string codeMessage_1202_dontplot {
            get {
                return ResourceManager.GetString("codeMessage_1202_dontplot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Layer, path or object is not visible because of visibility attribute..
        /// </summary>
        public static string codeMessage_1302_dontplot {
            get {
                return ResourceManager.GetString("codeMessage_1302_dontplot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на .
        /// </summary>
        public static string codeMessage_1x02_dontplot {
            get {
                return ResourceManager.GetString("codeMessage_1x02_dontplot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The amount of single, selectable, figures exceeds the given maximum an would decrease the performance. \r\nAll figures are summarized to one figure.\r\nThe limit can be adjusted in\r\n[Setup - Graphics import - Path import - Grouping and tools - Conversion concerning].
        /// </summary>
        public static string codeMessage_2_highdataamount {
            get {
                return ResourceManager.GetString("codeMessage_2_highdataamount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The z-axis is assigned twice: as tangential axis AND as Pen-up/down axis. \r\nThis will cause strange and unpredictable behavior..
        /// </summary>
        public static string codeMessage_2_zdoubletang {
            get {
                return ResourceManager.GetString("codeMessage_2_zdoubletang", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на M3|M4 / M5 command will not be sent! -&gt; Spindle stays off. \r\nCheck option in \r\n[Setup - Graphics import - G-Code generation - Z axis Pen up/down translation] \r\n☐ Do not switch on spindle.
        /// </summary>
        public static string codeMessage_3_spindlestaysoff {
            get {
                return ResourceManager.GetString("codeMessage_3_spindlestaysoff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The z-axis is assigned twice: as auxillary axis AND as Pen-up/down axis. \r\nThis will cause strange and unpredictable behavior..
        /// </summary>
        public static string codeMessage_3_zdoubleaux {
            get {
                return ResourceManager.GetString("codeMessage_3_zdoubleaux", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The z-axis is assigned twice: as tangential axis AND as Pen-up/down axis. \r\nThis will cause strange and unpredictable behavior..
        /// </summary>
        public static string codeMessage_3_zdoubletang {
            get {
                return ResourceManager.GetString("codeMessage_3_zdoubletang", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Attention.
        /// </summary>
        public static string codeMessage_attention {
            get {
                return ResourceManager.GetString("codeMessage_attention", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error.
        /// </summary>
        public static string codeMessage_error {
            get {
                return ResourceManager.GetString("codeMessage_error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Warning.
        /// </summary>
        public static string codeMessage_warning {
            get {
                return ResourceManager.GetString("codeMessage_warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Alarm.
        /// </summary>
        public static string grblAlarm {
            get {
                return ResourceManager.GetString("grblAlarm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Check.
        /// </summary>
        public static string grblCheck {
            get {
                return ResourceManager.GetString("grblCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Door.
        /// </summary>
        public static string grblDoor {
            get {
                return ResourceManager.GetString("grblDoor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hold.
        /// </summary>
        public static string grblHold {
            get {
                return ResourceManager.GetString("grblHold", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Home.
        /// </summary>
        public static string grblHome {
            get {
                return ResourceManager.GetString("grblHome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Idle.
        /// </summary>
        public static string grblIdle {
            get {
                return ResourceManager.GetString("grblIdle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Jog.
        /// </summary>
        public static string grblJog {
            get {
                return ResourceManager.GetString("grblJog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на grbl controller is not connected!\r\nCannot perform the desired action!.
        /// </summary>
        public static string grblNotConnected {
            get {
                return ResourceManager.GetString("grblNotConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Probe.
        /// </summary>
        public static string grblProbe {
            get {
                return ResourceManager.GetString("grblProbe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Run.
        /// </summary>
        public static string grblRun {
            get {
                return ResourceManager.GetString("grblRun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Sleep.
        /// </summary>
        public static string grblSleep {
            get {
                return ResourceManager.GetString("grblSleep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на height scan.
        /// </summary>
        public static string heightScan {
            get {
                return ResourceManager.GetString("heightScan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add imported graphic.
        /// </summary>
        public static string importMessageAddGraphic {
            get {
                return ResourceManager.GetString("importMessageAddGraphic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File name:.
        /// </summary>
        public static string importMessageFileName {
            get {
                return ResourceManager.GetString("importMessageFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File path:.
        /// </summary>
        public static string importMessageFilePath {
            get {
                return ResourceManager.GetString("importMessageFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на GCode Footer.
        /// </summary>
        public static string importMessageGcodeFooter {
            get {
                return ResourceManager.GetString("importMessageGcodeFooter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на GCode Header.
        /// </summary>
        public static string importMessageGcodeHeader {
            get {
                return ResourceManager.GetString("importMessageGcodeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на General settings:.
        /// </summary>
        public static string importMessageGeneralSettings {
            get {
                return ResourceManager.GetString("importMessageGeneralSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Lasermode: use M3S0 instead of M5 to switch off laser (or spindle).
        /// </summary>
        public static string importMessageLaserMode {
            get {
                return ResourceManager.GetString("importMessageLaserMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на grbl Laser mode $32 is not enabled.
        /// </summary>
        public static string importMessageLaserModeNok {
            get {
                return ResourceManager.GetString("importMessageLaserModeNok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Laser power.
        /// </summary>
        public static string importMessageLaserPower {
            get {
                return ResourceManager.GetString("importMessageLaserPower", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на grbl X/Y Max. rate:.
        /// </summary>
        public static string importMessageMaxXYFeed {
            get {
                return ResourceManager.GetString("importMessageMaxXYFeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Path interpretation:.
        /// </summary>
        public static string importMessageOption1 {
            get {
                return ResourceManager.GetString("importMessageOption1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Possible path interpretations.
        /// </summary>
        public static string importMessageOption1Link {
            get {
                return ResourceManager.GetString("importMessageOption1Link", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Path modification:.
        /// </summary>
        public static string importMessageOption2 {
            get {
                return ResourceManager.GetString("importMessageOption2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Possible path modifications.
        /// </summary>
        public static string importMessageOption2Link {
            get {
                return ResourceManager.GetString("importMessageOption2Link", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Convert circle-radius to Z value.
        /// </summary>
        public static string importMessageOptionCircleRadiusToZ {
            get {
                return ResourceManager.GetString("importMessageOptionCircleRadiusToZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Convert circle to point.
        /// </summary>
        public static string importMessageOptionCircleToDot {
            get {
                return ResourceManager.GetString("importMessageOptionCircleToDot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Crop or tile graphic.
        /// </summary>
        public static string importMessageOptionClip {
            get {
                return ResourceManager.GetString("importMessageOptionClip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Adapt path for Drag tool.
        /// </summary>
        public static string importMessageOptionDragTool {
            get {
                return ResourceManager.GetString("importMessageOptionDragTool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Extend path (e.g. for laser cutting).
        /// </summary>
        public static string importMessageOptionExtend {
            get {
                return ResourceManager.GetString("importMessageOptionExtend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Filter graphic elements (remove objects).
        /// </summary>
        public static string importMessageOptionFilter {
            get {
                return ResourceManager.GetString("importMessageOptionFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Add Hatch fill.
        /// </summary>
        public static string importMessageOptionHatchFill {
            get {
                return ResourceManager.GetString("importMessageOptionHatchFill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Nodes only - make dots at given coordinates.
        /// </summary>
        public static string importMessageOptionNodesOnly {
            get {
                return ResourceManager.GetString("importMessageOptionNodesOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Outline development.
        /// </summary>
        public static string importMessageOptionOutlineDevelop {
            get {
                return ResourceManager.GetString("importMessageOptionOutlineDevelop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Get S value from line width (laser power / spindle speed).
        /// </summary>
        public static string importMessageOptionSFromWidth {
            get {
                return ResourceManager.GetString("importMessageOptionSFromWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tangential axis.
        /// </summary>
        public static string importMessageOptionTangential {
            get {
                return ResourceManager.GetString("importMessageOptionTangential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wire bender.
        /// </summary>
        public static string importMessageOptionWireBender {
            get {
                return ResourceManager.GetString("importMessageOptionWireBender", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Get Z value from line width (depth).
        /// </summary>
        public static string importMessageOptionZFromWidth {
            get {
                return ResourceManager.GetString("importMessageOptionZFromWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Pen up/down translation:.
        /// </summary>
        public static string importMessagePUD {
            get {
                return ResourceManager.GetString("importMessagePUD", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Individual commands.
        /// </summary>
        public static string importMessagePUDIndividual {
            get {
                return ResourceManager.GetString("importMessagePUDIndividual", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Pen Down.
        /// </summary>
        public static string importMessagePUDPenDown {
            get {
                return ResourceManager.GetString("importMessagePUDPenDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Pen Up.
        /// </summary>
        public static string importMessagePUDPenUp {
            get {
                return ResourceManager.GetString("importMessagePUDPenUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на PWM enabled (Servo control).
        /// </summary>
        public static string importMessagePUDPWM {
            get {
                return ResourceManager.GetString("importMessagePUDPWM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на PWM Down.
        /// </summary>
        public static string importMessagePUDPWMDown {
            get {
                return ResourceManager.GetString("importMessagePUDPWMDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на PWM Up.
        /// </summary>
        public static string importMessagePUDPWMUp {
            get {
                return ResourceManager.GetString("importMessagePUDPWMUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на PWM Zero.
        /// </summary>
        public static string importMessagePUDPWMZero {
            get {
                return ResourceManager.GetString("importMessagePUDPWMZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Spindle on/off with Pen down/up.
        /// </summary>
        public static string importMessagePUDSpindle {
            get {
                return ResourceManager.GetString("importMessagePUDSpindle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Z axis enabled.
        /// </summary>
        public static string importMessagePUDZ {
            get {
                return ResourceManager.GetString("importMessagePUDZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Depth per pass.
        /// </summary>
        public static string importMessagePUDZDepthPass {
            get {
                return ResourceManager.GetString("importMessagePUDZDepthPass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No Z up between passes.
        /// </summary>
        public static string importMessagePUDZDepthPassNoZUp {
            get {
                return ResourceManager.GetString("importMessagePUDZDepthPassNoZUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Z Down (engrave).
        /// </summary>
        public static string importMessagePUDZDown {
            get {
                return ResourceManager.GetString("importMessagePUDZDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Z Feed.
        /// </summary>
        public static string importMessagePUDZFeed {
            get {
                return ResourceManager.GetString("importMessagePUDZFeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на grbl Z Max. Feed rate:.
        /// </summary>
        public static string importMessagePUDZFeedMax {
            get {
                return ResourceManager.GetString("importMessagePUDZFeedMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Spindle will not be switched on.
        /// </summary>
        public static string importMessagePUDZNoSpindle {
            get {
                return ResourceManager.GetString("importMessagePUDZNoSpindle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Z Up (save).
        /// </summary>
        public static string importMessagePUDZUp {
            get {
                return ResourceManager.GetString("importMessagePUDZUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Relative movements are enabled.
        /// </summary>
        public static string importMessageRelMovement {
            get {
                return ResourceManager.GetString("importMessageRelMovement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на From Metadata.
        /// </summary>
        public static string importMessageSourceMetadata {
            get {
                return ResourceManager.GetString("importMessageSourceMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на From tool table.
        /// </summary>
        public static string importMessageSourceTooltable {
            get {
                return ResourceManager.GetString("importMessageSourceTooltable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Laser mode / Spindle direction.
        /// </summary>
        public static string importMessageSpindleDirection {
            get {
                return ResourceManager.GetString("importMessageSpindleDirection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на M3 (CW-clockwise) Constant Laser Power Mode.
        /// </summary>
        public static string importMessageSpindleDirectionM3 {
            get {
                return ResourceManager.GetString("importMessageSpindleDirectionM3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на M4 (CCW-counterclockwise) Dynamic Laser Power Mode.
        /// </summary>
        public static string importMessageSpindleDirectionM4 {
            get {
                return ResourceManager.GetString("importMessageSpindleDirectionM4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Spindle Speed.
        /// </summary>
        public static string importMessageSpindleSpeed {
            get {
                return ResourceManager.GetString("importMessageSpindleSpeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на grbl Spindle speed Max..
        /// </summary>
        public static string importMessageSpindleSpeedMax {
            get {
                return ResourceManager.GetString("importMessageSpindleSpeedMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SVG Metadata available, but not enabled!.
        /// </summary>
        public static string importMessageSVGMetaDataNok1 {
            get {
                return ResourceManager.GetString("importMessageSVGMetaDataNok1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на SVG Metadata processed.
        /// </summary>
        public static string importMessageSVGMetaDataOk {
            get {
                return ResourceManager.GetString("importMessageSVGMetaDataOk", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Import information.
        /// </summary>
        public static string importMessageTitle {
            get {
                return ResourceManager.GetString("importMessageTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tool table needed, last loaded:.
        /// </summary>
        public static string importMessageToolTableNeeded {
            get {
                return ResourceManager.GetString("importMessageToolTableNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на XY Feed.
        /// </summary>
        public static string importMessageXYFeed {
            get {
                return ResourceManager.GetString("importMessageXYFeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Continue last job?.
        /// </summary>
        public static string loadMessageContinue {
            get {
                return ResourceManager.GetString("loadMessageContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Loading the last processed G-Code.
        /// </summary>
        public static string loadMessageLastProcessed {
            get {
                return ResourceManager.GetString("loadMessageLastProcessed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Loading G-Code.
        /// </summary>
        public static string loadMessageLoad1 {
            get {
                return ResourceManager.GetString("loadMessageLoad1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на No import options applied!.
        /// </summary>
        public static string loadMessageNoImport {
            get {
                return ResourceManager.GetString("loadMessageNoImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Load G-Code option: Replaces laser mode command M3 by M4.
        /// </summary>
        public static string loadMessageReplaceM34 {
            get {
                return ResourceManager.GetString("loadMessageReplaceM34", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Load G-Code option: Replaces laser mode command M4 by M3.
        /// </summary>
        public static string loadMessageReplaceM43 {
            get {
                return ResourceManager.GetString("loadMessageReplaceM43", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Streaming is active, can&apos;t load new file..
        /// </summary>
        public static string loadMessageStreaming {
            get {
                return ResourceManager.GetString("loadMessageStreaming", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Automatic tool change is enabled.
        /// </summary>
        public static string loadMessageToolChange {
            get {
                return ResourceManager.GetString("loadMessageToolChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Attention.
        /// </summary>
        public static string mainAttention {
            get {
                return ResourceManager.GetString("mainAttention", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Feel free to improove translation.
        /// </summary>
        public static string mainHelpLanguage {
            get {
                return ResourceManager.GetString("mainHelpLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File &apos;hotkeys.xml&apos; not found, no hotkeys set!.
        /// </summary>
        public static string mainHotkeyError {
            get {
                return ResourceManager.GetString("mainHotkeyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Unknown action:.
        /// </summary>
        public static string mainHotkeyError1 {
            get {
                return ResourceManager.GetString("mainHotkeyError1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error with Hotkey.xml.
        /// </summary>
        public static string mainHotkeyError2 {
            get {
                return ResourceManager.GetString("mainHotkeyError2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Check G-Code.
        /// </summary>
        public static string mainInfoCheckCode {
            get {
                return ResourceManager.GetString("mainInfoCheckCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error before line.
        /// </summary>
        public static string mainInfoErrorLine {
            get {
                return ResourceManager.GetString("mainInfoErrorLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Finish checking G-Code.
        /// </summary>
        public static string mainInfoFinishCheck {
            get {
                return ResourceManager.GetString("mainInfoFinishCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Finish sending G-Code.
        /// </summary>
        public static string mainInfoFinishSend {
            get {
                return ResourceManager.GetString("mainInfoFinishSend", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Press &apos;Kill Alarm&apos; to proceed (&apos;$X&apos;).
        /// </summary>
        public static string mainInfoKill {
            get {
                return ResourceManager.GetString("mainInfoKill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Laser Mode not active $32=0.
        /// </summary>
        public static string mainInfoLaserModeOff {
            get {
                return ResourceManager.GetString("mainInfoLaserModeOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Laser Mode active $32=1.
        /// </summary>
        public static string mainInfoLaserModeOn {
            get {
                return ResourceManager.GetString("mainInfoLaserModeOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Pause streaming - press play (.
        /// </summary>
        public static string mainInfoPause {
            get {
                return ResourceManager.GetString("mainInfoPause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Probing.
        /// </summary>
        public static string mainInfoProbing {
            get {
                return ResourceManager.GetString("mainInfoProbing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Press &apos;Resume&apos; to proceed.
        /// </summary>
        public static string mainInfoResume {
            get {
                return ResourceManager.GetString("mainInfoResume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Send G-Code.
        /// </summary>
        public static string mainInfoSendCode {
            get {
                return ResourceManager.GetString("mainInfoSendCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на STOP streaming (.
        /// </summary>
        public static string mainInfoStopStream {
            get {
                return ResourceManager.GetString("mainInfoStopStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на STOP streaming ( Line.
        /// </summary>
        public static string mainInfoStopStream2 {
            get {
                return ResourceManager.GetString("mainInfoStopStream2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tool change....
        /// </summary>
        public static string mainInfoToolChange {
            get {
                return ResourceManager.GetString("mainInfoToolChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Undo last action.
        /// </summary>
        public static string mainInfoUndo {
            get {
                return ResourceManager.GetString("mainInfoUndo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Wait for IDLE, then pause (.
        /// </summary>
        public static string mainInfoWaitIdle {
            get {
                return ResourceManager.GetString("mainInfoWaitIdle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Next move will exceed machine limits!\r.
        /// </summary>
        public static string mainLimits1 {
            get {
                return ResourceManager.GetString("mainLimits1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на \r\n Press &apos;Ok&apos; to move anyway.
        /// </summary>
        public static string mainLimits2 {
            get {
                return ResourceManager.GetString("mainLimits2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Graphics dimension exceeds machine dimension!\r\nTransformation is recommended to avoid damaging the machine!.
        /// </summary>
        public static string mainLimits3 {
            get {
                return ResourceManager.GetString("mainLimits3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Streaming must be stopped before loading new file.
        /// </summary>
        public static string mainLoadError {
            get {
                return ResourceManager.GetString("mainLoadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File not found: &apos;.
        /// </summary>
        public static string mainLoadError1 {
            get {
                return ResourceManager.GetString("mainLoadError1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на URL extension is not &apos;svg&apos; or &apos;dxf&apos;\r\nTry SVG import anyway, but without setting &apos;Recent File&apos; list..
        /// </summary>
        public static string mainLoadError2 {
            get {
                return ResourceManager.GetString("mainLoadError2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File extension not supported &apos;.
        /// </summary>
        public static string mainLoadError3 {
            get {
                return ResourceManager.GetString("mainLoadError3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Not a valid number.
        /// </summary>
        public static string mainParseError {
            get {
                return ResourceManager.GetString("mainParseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Not a valid number, set line to 0.
        /// </summary>
        public static string mainParseError1 {
            get {
                return ResourceManager.GetString("mainParseError1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Pause streaming - press play.
        /// </summary>
        public static string mainPauseStream {
            get {
                return ResourceManager.GetString("mainPauseStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The last job was paused at line.
        /// </summary>
        public static string mainPauseStream1 {
            get {
                return ResourceManager.GetString("mainPauseStream1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Do you want to continue the job?.
        /// </summary>
        public static string mainPauseStream2 {
            get {
                return ResourceManager.GetString("mainPauseStream2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Problem.
        /// </summary>
        public static string mainProblem {
            get {
                return ResourceManager.GetString("mainProblem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Progress.
        /// </summary>
        public static string mainProgress {
            get {
                return ResourceManager.GetString("mainProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Quit GRBL-Plotter?.
        /// </summary>
        public static string mainQuit {
            get {
                return ResourceManager.GetString("mainQuit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Speed.
        /// </summary>
        public static string mainSimuSpeed {
            get {
                return ResourceManager.GetString("mainSimuSpeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Start path simulation.
        /// </summary>
        public static string mainSimuStart {
            get {
                return ResourceManager.GetString("mainSimuStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stop simulation.
        /// </summary>
        public static string mainSimuStop {
            get {
                return ResourceManager.GetString("mainSimuStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Missing program files,&lt;br&gt;please check the GRBL-Plotter installation.
        /// </summary>
        public static string mainStartMissingFiles {
            get {
                return ResourceManager.GetString("mainStartMissingFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Streaming is still active - press Stop and try again.
        /// </summary>
        public static string mainStreamingActive {
            get {
                return ResourceManager.GetString("mainStreamingActive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tool / Pen change!.
        /// </summary>
        public static string mainToolChange {
            get {
                return ResourceManager.GetString("mainToolChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Tool change needed:\r.
        /// </summary>
        public static string mainToolChange1 {
            get {
                return ResourceManager.GetString("mainToolChange1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на \rpress start to continue..
        /// </summary>
        public static string mainToolChange2 {
            get {
                return ResourceManager.GetString("mainToolChange2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fixed some unknown G-Code:\r\n.
        /// </summary>
        public static string mainUnknownCode {
            get {
                return ResourceManager.GetString("mainUnknownCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на .
        /// </summary>
        public static string NewKey {
            get {
                return ResourceManager.GetString("NewKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на probing.
        /// </summary>
        public static string probing {
            get {
                return ResourceManager.GetString("probing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Probing canceled.
        /// </summary>
        public static string probingCancel1 {
            get {
                return ResourceManager.GetString("probingCancel1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Process last command.
        /// </summary>
        public static string probingCancel2 {
            get {
                return ResourceManager.GetString("probingCancel2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Move to center.
        /// </summary>
        public static string probingCenter {
            get {
                return ResourceManager.GetString("probingCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Fail: no contact.
        /// </summary>
        public static string probingFail1 {
            get {
                return ResourceManager.GetString("probingFail1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Cancel probing.
        /// </summary>
        public static string probingFail2 {
            get {
                return ResourceManager.GetString("probingFail2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Finish.
        /// </summary>
        public static string probingFinish {
            get {
                return ResourceManager.GetString("probingFinish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Probing on.
        /// </summary>
        public static string probingProbingOn {
            get {
                return ResourceManager.GetString("probingProbingOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Set center .
        /// </summary>
        public static string probingSetCenter {
            get {
                return ResourceManager.GetString("probingSetCenter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Time out.
        /// </summary>
        public static string probingTimeOut {
            get {
                return ResourceManager.GetString("probingTimeOut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на scan.
        /// </summary>
        public static string scan {
            get {
                return ResourceManager.GetString("scan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Close.
        /// </summary>
        public static string serialClose {
            get {
                return ResourceManager.GetString("serialClose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Serial Connection is needed.\r\nClose main window instead.
        /// </summary>
        public static string serialCloseError {
            get {
                return ResourceManager.GetString("serialCloseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Open.
        /// </summary>
        public static string serialOpen {
            get {
                return ResourceManager.GetString("serialOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Custom button is blocked while streaming.
        /// </summary>
        public static string statusStripeButtonBlocked {
            get {
                return ResourceManager.GetString("statusStripeButtonBlocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Check COM-window for further information.
        /// </summary>
        public static string statusStripeCheckCOM {
            get {
                return ResourceManager.GetString("statusStripeCheckCOM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на &apos;Check for new GRBL-Plotter release on GitHub&apos; - can be disabled in [Setup - Program control] .
        /// </summary>
        public static string statusStripeCheckUpdate {
            get {
                return ResourceManager.GetString("statusStripeCheckUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Alt-Click to select Figure; Control-Click to select Group; Shift-Click to select Tile;Or click on XML-Tag.
        /// </summary>
        public static string statusStripeClickKeys {
            get {
                return ResourceManager.GetString("statusStripeClickKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Click: mark Figure; Control-Click: mark Group; Shift-Click: mark Tile;Alt-Click: show GCode line.
        /// </summary>
        public static string statusStripeClickKeys2 {
            get {
                return ResourceManager.GetString("statusStripeClickKeys2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Control-Down to move selected Block one down; Control-Shift-Down to move to end.
        /// </summary>
        public static string statusStripeDownKeys {
            get {
                return ResourceManager.GetString("statusStripeDownKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Edit mode on - click into 2D view to finish.
        /// </summary>
        public static string statusStripeEditModeOn {
            get {
                return ResourceManager.GetString("statusStripeEditModeOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File loading.
        /// </summary>
        public static string statusStripeFileLoad {
            get {
                return ResourceManager.GetString("statusStripeFileLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на File not found - remove from list.
        /// </summary>
        public static string statusStripeFileNotFound {
            get {
                return ResourceManager.GetString("statusStripeFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Perhaps serial port is locked and a restart of GRBL-Plotter is needed.
        /// </summary>
        public static string statusStripeGrblResetNeeded {
            get {
                return ResourceManager.GetString("statusStripeGrblResetNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Probably a reset of the controller is needed.
        /// </summary>
        public static string statusStripeResetNeeded {
            get {
                return ResourceManager.GetString("statusStripeResetNeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Selection moved by.
        /// </summary>
        public static string statusStripeSelectionMoved {
            get {
                return ResourceManager.GetString("statusStripeSelectionMoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Check G-Code on grbl controller.
        /// </summary>
        public static string statusStripeStreamingCheck {
            get {
                return ResourceManager.GetString("statusStripeStreamingCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Continue streaming.
        /// </summary>
        public static string statusStripeStreamingContinue {
            get {
                return ResourceManager.GetString("statusStripeStreamingContinue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Streaming FINISHED after.
        /// </summary>
        public static string statusStripeStreamingFinish {
            get {
                return ResourceManager.GetString("statusStripeStreamingFinish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Streaming PAUSE.
        /// </summary>
        public static string statusStripeStreamingPause {
            get {
                return ResourceManager.GetString("statusStripeStreamingPause", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Streaming START from line.
        /// </summary>
        public static string statusStripeStreamingStart {
            get {
                return ResourceManager.GetString("statusStripeStreamingStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Streaming status and G-Code are saved in &apos;_lastProcessed.nc&apos;. Continuation after program restart is possible..
        /// </summary>
        public static string statusStripeStreamingStatusSaved {
            get {
                return ResourceManager.GetString("statusStripeStreamingStatusSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Streaming STOP at line.
        /// </summary>
        public static string statusStripeStreamingStop {
            get {
                return ResourceManager.GetString("statusStripeStreamingStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Control-Up to move selected Block one up; Control-Shift-Up to move to top.
        /// </summary>
        public static string statusStripeUpKeys {
            get {
                return ResourceManager.GetString("statusStripeUpKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Use current settings (last loaded: &apos;{0}&apos;).
        /// </summary>
        public static string useCaseHeader1 {
            get {
                return ResourceManager.GetString("useCaseHeader1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings from &apos;{0}&apos;.
        /// </summary>
        public static string useCaseHeader2 {
            get {
                return ResourceManager.GetString("useCaseHeader2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на A use-case is a presetted setup to adjust settings for a specific machine and/or application.\r\nThe settings of a selected and applied use-case also remain after the import of the graphics.\r\nA use-case needs to be stored in \data\usecases to be accessible.\r\nAlso exported machine-settings and sub-sets of it can be used..
        /// </summary>
        public static string useCaseInfo {
            get {
                return ResourceManager.GetString("useCaseInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Information.
        /// </summary>
        public static string useCaseInfo2 {
            get {
                return ResourceManager.GetString("useCaseInfo2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ### Current settings ###.
        /// </summary>
        public static string useCaseItem0 {
            get {
                return ResourceManager.GetString("useCaseItem0", resourceCulture);
            }
        }
    }
}
